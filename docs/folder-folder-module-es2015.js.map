{"version":3,"sources":["./node_modules/ionic-header-parallax/fesm2015/ionic-header-parallax.js","./src/app/folder/folder.page.html","./src/app/folder/folder-routing.module.ts","./src/app/folder/folder.module.ts","./src/app/folder/folder.page.scss","./src/app/folder/folder.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAkF;;AAElF;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,mBAAmB;AAClF;AACA,4DAA4D,0BAA0B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,oBAAoB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,yEAAyE,yEAAyE;AAClJ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"folder-folder-module-es2015.js","sourcesContent":["import { Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass ParallaxDirective {\r\n    /**\r\n     * @param {?} headerRef\r\n     * @param {?} renderer\r\n     */\r\n    constructor(headerRef, renderer) {\r\n        this.headerRef = headerRef;\r\n        this.renderer = renderer;\r\n        this.maximumHeight = 300;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.initElements();\r\n            this.initStyles();\r\n            this.initEvents();\r\n        }), 100);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    initElements() {\r\n        /** @type {?} */\r\n        const parentElement = this.headerRef.nativeElement.parentElement;\r\n        this.header = this.headerRef.nativeElement;\r\n        this.toolbar = this.header.querySelector('ion-toolbar');\r\n        if (!this.toolbar) {\r\n            throw new Error('Parallax directive requires a toolbar or navbar element on the page to work.');\r\n        }\r\n        this.ionTitle = this.toolbar.querySelector('ion-title');\r\n        this.toolbarBackground = this.toolbar.shadowRoot.querySelector('.toolbar-background');\r\n        this.barButtons = this.headerRef.nativeElement.querySelector('ion-buttons');\r\n        /** @type {?} */\r\n        const ionContent = parentElement.querySelector('ion-content');\r\n        this.scrollContent = ionContent.shadowRoot.querySelector('.inner-scroll');\r\n        if (!this.scrollContent) {\r\n            throw new Error('Parallax directive requires an <ion-content> element on the page to work.');\r\n        }\r\n        // Create image overlay\r\n        this.imageOverlay = this.renderer.createElement('div');\r\n        this.renderer.addClass(this.imageOverlay, 'image-overlay');\r\n        this.colorOverlay = this.renderer.createElement('div');\r\n        this.renderer.addClass(this.colorOverlay, 'color-overlay');\r\n        this.colorOverlay.appendChild(this.imageOverlay);\r\n        this.header.appendChild(this.colorOverlay);\r\n        // Copy title and buttons\r\n        this.overlayTitle = this.ionTitle && (/** @type {?} */ (this.ionTitle.cloneNode(true)));\r\n        if (this.overlayTitle) {\r\n            this.renderer.addClass(this.overlayTitle, 'parallax-title');\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                /** @type {?} */\r\n                const toolbarTitle = this.overlayTitle.shadowRoot.querySelector('.toolbar-title');\r\n                this.renderer.setStyle(toolbarTitle, 'pointer-events', 'unset');\r\n            }));\r\n        }\r\n        if (this.overlayTitle) {\r\n            this.imageOverlay.appendChild(this.overlayTitle);\r\n        }\r\n        if (this.barButtons) {\r\n            this.imageOverlay.appendChild(this.barButtons);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    initStyles() {\r\n        this.headerHeight = this.scrollContent.clientHeight;\r\n        this.ticking = false;\r\n        if (!this.scrollContent || !toolbar) {\r\n            return;\r\n        }\r\n        // fetch styles\r\n        this.maximumHeight = parseFloat(this.maximumHeight.toString());\r\n        this.headerMinHeight = this.toolbar.offsetHeight;\r\n        this.scrollContentPaddingTop = window.getComputedStyle(this.scrollContent, null).paddingTop.replace('px', '');\r\n        this.scrollContentPaddingTop = parseFloat(this.scrollContentPaddingTop);\r\n        this.originalToolbarBgColor = window.getComputedStyle(this.toolbarBackground, null).backgroundColor;\r\n        // header and title\r\n        this.renderer.setStyle(this.header, 'position', 'relative');\r\n        if (this.overlayTitle) {\r\n            this.renderer.setStyle(this.overlayTitle, 'color', this.titleColor);\r\n            this.renderer.setStyle(this.overlayTitle, 'position', 'absolute');\r\n            this.renderer.setStyle(this.overlayTitle, 'width', '100%');\r\n            this.renderer.setStyle(this.overlayTitle, 'height', '100%');\r\n            this.renderer.setStyle(this.overlayTitle, 'text-align', 'center');\r\n        }\r\n        // color overlay\r\n        this.renderer.setStyle(this.colorOverlay, 'background-color', this.originalToolbarBgColor);\r\n        this.renderer.setStyle(this.colorOverlay, 'height', `${this.maximumHeight}px`);\r\n        this.renderer.setStyle(this.colorOverlay, 'position', 'absolute');\r\n        this.renderer.setStyle(this.colorOverlay, 'top', `${-this.headerMinHeight * 0}px`);\r\n        this.renderer.setStyle(this.colorOverlay, 'left', '0');\r\n        this.renderer.setStyle(this.colorOverlay, 'width', '100%');\r\n        this.renderer.setStyle(this.colorOverlay, 'z-index', '10');\r\n        this.renderer.setStyle(this.colorOverlay, 'pointer-events', 'none');\r\n        // image overlay\r\n        this.renderer.setStyle(this.imageOverlay, 'background-color', this.expandedColor);\r\n        this.renderer.setStyle(this.imageOverlay, 'background-image', `url(${this.imageUrl || ''})`);\r\n        this.renderer.setStyle(this.imageOverlay, 'height', `100%`);\r\n        this.renderer.setStyle(this.imageOverlay, 'width', '100%');\r\n        this.renderer.setStyle(this.imageOverlay, 'pointer-events', 'none');\r\n        this.renderer.setStyle(this.imageOverlay, 'background-size', 'cover');\r\n        this.renderer.setStyle(this.imageOverlay, 'background-position', 'center');\r\n        // .toolbar-background\r\n        this.renderer.setStyle(this.toolbarBackground, 'background-color', this.originalToolbarBgColor);\r\n        // .bar-buttons\r\n        if (this.barButtons) {\r\n            this.renderer.setStyle(this.barButtons, 'pointer-events', 'all');\r\n            Array.from(this.barButtons.children).forEach((/**\r\n             * @param {?} btn\r\n             * @return {?}\r\n             */\r\n            btn => {\r\n                this.renderer.setStyle(btn, 'color', this.titleColor);\r\n            }));\r\n        }\r\n        // .scroll-content\r\n        if (this.scrollContent) {\r\n            this.renderer.setAttribute(this.scrollContent, 'parallax', '');\r\n            this.renderer.setStyle(this.scrollContent, 'padding-top', `${this.maximumHeight + this.scrollContentPaddingTop - this.headerMinHeight}px`);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    initEvents() {\r\n        window.addEventListener('resize', (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.headerHeight = this.scrollContent.clientHeight;\r\n        }), false);\r\n        if (this.scrollContent) {\r\n            this.scrollContent.addEventListener('scroll', (/**\r\n             * @param {?} e\r\n             * @return {?}\r\n             */\r\n            (e) => {\r\n                if (!this.ticking) {\r\n                    window.requestAnimationFrame((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        this.updateElasticHeader();\r\n                    }));\r\n                }\r\n                this.ticking = true;\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    updateElasticHeader() {\r\n        if (!this.scrollContent || !toolbar) {\r\n            return;\r\n        }\r\n        this.scrollTop = this.scrollContent.scrollTop;\r\n        if (this.scrollTop >= 0) {\r\n            this.translateAmt = this.scrollTop / 2;\r\n            this.scaleAmt = 1;\r\n        }\r\n        else {\r\n            this.translateAmt = 0;\r\n            this.scaleAmt = -this.scrollTop / this.headerHeight + 1;\r\n        }\r\n        // Parallax total progress\r\n        this.headerMinHeight = this.toolbar.offsetHeight;\r\n        /** @type {?} */\r\n        let progress = (this.maximumHeight - this.scrollTop - this.headerMinHeight) / (this.maximumHeight - this.headerMinHeight);\r\n        progress = Math.max(progress, 0);\r\n        // ion-header: set height\r\n        /** @type {?} */\r\n        let targetHeight = this.maximumHeight - this.scrollTop;\r\n        targetHeight = Math.max(targetHeight, this.headerMinHeight);\r\n        // .toolbar-background: change color\r\n        this.renderer.setStyle(this.imageOverlay, 'height', `${targetHeight}px`);\r\n        this.renderer.setStyle(this.imageOverlay, 'opacity', `${progress}`);\r\n        this.renderer.setStyle(this.colorOverlay, 'height', `${targetHeight}px`);\r\n        this.renderer.setStyle(this.colorOverlay, 'opacity', targetHeight > this.headerMinHeight ? '1' : '0');\r\n        this.renderer.setStyle(this.toolbarBackground, 'background-color', targetHeight > this.headerMinHeight ? 'transparent' : this.originalToolbarBgColor);\r\n        // .bar-buttons\r\n        if (this.barButtons) {\r\n            if (targetHeight > this.headerMinHeight) {\r\n                this.imageOverlay.append(this.barButtons);\r\n                Array.from(this.barButtons.children).forEach((/**\r\n                 * @param {?} btn\r\n                 * @return {?}\r\n                 */\r\n                btn => {\r\n                    this.renderer.setStyle(btn, 'color', this.titleColor);\r\n                }));\r\n            }\r\n            else {\r\n                this.toolbar.append(this.barButtons);\r\n                Array.from(this.barButtons.children).forEach((/**\r\n                 * @param {?} btn\r\n                 * @return {?}\r\n                 */\r\n                btn => {\r\n                    this.renderer.setStyle(btn, 'color', 'unset');\r\n                }));\r\n            }\r\n        }\r\n        this.ticking = false;\r\n    }\r\n}\r\nParallaxDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: 'ion-header[parallax]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nParallaxDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nParallaxDirective.propDecorators = {\r\n    imageUrl: [{ type: Input }],\r\n    expandedColor: [{ type: Input }],\r\n    titleColor: [{ type: Input }],\r\n    maximumHeight: [{ type: Input }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.imageUrl;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.expandedColor;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.titleColor;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.maximumHeight;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.header;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.toolbar;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.toolbarBackground;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.imageOverlay;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.colorOverlay;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.barButtons;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.scrollContent;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.headerHeight;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.headerMinHeight;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.translateAmt;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.scaleAmt;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.scrollTop;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.lastScrollTop;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.ticking;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.originalToolbarBgColor;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.overlayTitle;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.ionTitle;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.overlayButtons;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.scrollContentPaddingTop;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.headerRef;\r\n    /** @type {?} */\r\n    ParallaxDirective.prototype.renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass IonicHeaderParallaxModule {\r\n}\r\nIonicHeaderParallaxModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [\r\n                    ParallaxDirective\r\n                ],\r\n                imports: [],\r\n                exports: [\r\n                    ParallaxDirective\r\n                ]\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { IonicHeaderParallaxModule, ParallaxDirective };\n//# sourceMappingURL=ionic-header-parallax.js.map\n","export default \"<!-- [translucent]=\\\"true\\\" -->\\n<ion-header *ngIf=\\\"building['PICTURE']\\\" parallax imageUrl=\\\"{{building['PICTURE']}}\\\" titleColor=\\\"white\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ building['SHORTENED_NAME'] }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-header *ngIf=\\\"!building['PICTURE']\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ building['SHORTENED_NAME'] }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"leed\\\"\\n[class.platinum]=\\\"building['LEED_CERTIFICATION'] == 'PLATINUM'\\\"\\n[class.gold]=\\\"building['LEED_CERTIFICATION'] == 'GOLD'\\\"\\n[class.silver]=\\\"building['LEED_CERTIFICATION'] == 'SILVER'\\\"\\n>\\n\\n  <div *ngIf=\\\"building['PICTURE']\\\">\\n    <br><br>\\n  </div>\\n  <div class=\\\"ion-text-center\\\">\\n    <div class=\\\"ion-text-wrap\\\" lines=\\\"none\\\">\\n      <!-- <ion-label> -->\\n        <h1>\\n          {{building[\\\"FULL_NAME\\\"]}}\\n        </h1>\\n      <!-- </ion-label> -->\\n    </div>\\n\\n    <marquee style=\\\"font-style: italic\\\" height=\\\"30px\\\" *ngIf=\\\"building['LEED_CERTIFICATION']\\\" hspace=\\\"10vw\\\" truespeed scrollamount=\\\"10\\\">\\n      LEED CERTIFICATION: {{building['LEED_CERTIFICATION']}}\\n    </marquee>\\n\\n    <ion-item color=\\\"danger\\\" *ngIf=\\\"!building['LEED_CERTIFICATION']\\\" class=\\\"ion-text-center\\\" lines=\\\"none\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"information-circle-outline\\\"></ion-icon>\\n      <ion-label class=\\\"ion-text-wrap\\\">NO LEED CERTIFICATION</ion-label>\\n    </ion-item>\\n\\n  </div>\\n\\n  <div class=\\\"ion-text-wrap ion-padding\\\">\\n    <p *ngFor=\\\"let d of building['DESCRIPTION']\\\">\\n      {{d}}\\n    </p>\\n\\n    <ion-item-group *ngIf=\\\"building['LEED HIGHLIGHTS'] != '' \\\" >\\n      <ion-item-divider sticky=\\\"false\\\">\\n        <ion-label>LEED Highlights</ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let lh of building['LEED HIGHLIGHTS']; let i = index\\\" lines=\\\"none\\\">\\n        <ion-note color=\\\"dark\\\" slot=\\\"start\\\">{{i+1}}.</ion-note>\\n        <ion-label class=\\\"ion-text-wrap\\\">{{lh}}</ion-label>\\n      </ion-item>\\n    </ion-item-group>\\n\\n    <br>\\n\\n    <ion-item-group *ngIf=\\\"building['SIZE'] && building['CONSTRUCTION COST'] && building['COMPLETION DATE']\\\">\\n      <ion-item-divider>\\n        <ion-icon slot=\\\"start\\\" name=\\\"business\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-wrap\\\">Building Details</ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item lines=\\\"inset\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"expand-outline\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-wrap\\\">Size: {{building[\\\"SIZE\\\"]}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"inset\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"construct-outline\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-wrap\\\">Construction Cost: {{building[\\\"CONSTRUCTION COST\\\"]}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"inset\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"construct\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-wrap\\\">Completion Date: {{building[\\\"COMPLETION DATE\\\"]}}</ion-label>\\n      </ion-item>\\n    </ion-item-group>\\n\\n    <br>\\n\\n    <ion-item-group *ngIf=\\\"building['AWARDS'] != ''\\\">\\n      <ion-item-divider>\\n        <ion-icon slot=\\\"start\\\" name=\\\"trophy-outline\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-wrap\\\">Awards</ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item lines=\\\"inset\\\" *ngFor=\\\"let award of building['AWARDS']; let i = index\\\">\\n        <ion-note color=\\\"dark\\\" slot=\\\"start\\\">{{i+1}}.</ion-note>\\n        <ion-label class=\\\"ion-text-wrap\\\">{{award}}</ion-label>\\n      </ion-item>\\n    </ion-item-group>\\n\\n    <ion-item-group *ngIf=\\\"building['PROJECT TEAM'] != ''\\\">\\n      <ion-item-divider>\\n        <ion-icon slot=\\\"start\\\" name=\\\"people\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-wrap\\\">Project Team</ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item lines=\\\"inset\\\" *ngFor=\\\"let team of building['PROJECT TEAM']; let i = index\\\">\\n        <ion-note color=\\\"dark\\\" slot=\\\"start\\\">{{i+1}}.</ion-note>\\n        <ion-label class=\\\"ion-text-wrap\\\">{{team}}</ion-label>\\n      </ion-item>\\n\\n    </ion-item-group>\\n  </div>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FolderPage } from './folder.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FolderPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FolderPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FolderPageRoutingModule } from './folder-routing.module';\n\nimport { FolderPage } from './folder.page';\n\nimport { IonicHeaderParallaxModule } from 'ionic-header-parallax';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FolderPageRoutingModule,\n    IonicHeaderParallaxModule\n  ],\n  declarations: [FolderPage]\n})\nexport class FolderPageModule {}\n","export default \"ion-menu-button {\\n  color: var(--ion-color-primary);\\n  --background: none;\\n}\\n\\n#container {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container strong {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container a {\\n  text-decoration: none;\\n}\\n\\nion-toolbar {\\n  --background: #ffffff;\\n}\\n\\n.leed {\\n  --background: none;\\n}\\n\\n.leed.platinum {\\n  --background: linear-gradient(#9f49fe, #ffffff);\\n}\\n\\n.leed.gold {\\n  --background: linear-gradient(#fff30d, #ffffff);\\n}\\n\\n.leed.silver {\\n  --background: linear-gradient(#c1c1c1, #ffffff);\\n}\\n\\nion-item {\\n  --background: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9hcm1hYS9EZXNrdG9wL2NvZGluZy9zdXNXb3JrL3N1c01hcHYxL3NyYy9hcHAvZm9sZGVyL2ZvbGRlci5wYWdlLnNjc3MiLCJzcmMvYXBwL2ZvbGRlci9mb2xkZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFBO0VBQ0UsK0JBQUE7RUFDQSxrQkFBQTtBQ1BGOztBRFVBO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0FDUEY7O0FEVUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7QUNQRjs7QURVQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxTQUFBO0FDUEY7O0FEVUE7RUFDRSxxQkFBQTtBQ1BGOztBRFVBO0VBQ0UscUJBQUE7QUNQRjs7QURVQTtFQUNFLGtCQUFBO0FDUEY7O0FEVUE7RUFDRSwrQ0FBQTtBQ1BGOztBRFdBO0VBQ0UsK0NBQUE7QUNSRjs7QURZQTtFQUNFLCtDQUFBO0FDVEY7O0FEWUE7RUFDRSxrQkFBQTtBQ1RGIiwiZmlsZSI6InNyYy9hcHAvZm9sZGVyL2ZvbGRlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAZnVuY3Rpb24gaW52ZXJ0LWxpbmVhcigkY29sb3IpIHtcbiAgQGlmIChsaWdodG5lc3MoJGNvbG9yKSA+IDUwKSB7XG4gICAgQHJldHVybiAjMDAwMDAwO1xuICB9IEBlbHNlIHtcbiAgICBAcmV0dXJuICNmZmZmZmY7XG4gIH1cbn1cblxuaW9uLW1lbnUtYnV0dG9uIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbiAgLS1iYWNrZ3JvdW5kOiBub25lO1xufVxuXG4jY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4jY29udGFpbmVyIHN0cm9uZyB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI2cHg7XG59XG5cbiNjb250YWluZXIgcCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjOGM4YzhjO1xuICBtYXJnaW46IDA7XG59XG5cbiNjb250YWluZXIgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6ICNmZmZmZmY7XG59XG5cbi5sZWVkIHtcbiAgLS1iYWNrZ3JvdW5kOiBub25lO1xufVxuXG4ubGVlZC5wbGF0aW51bSB7XG4gIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCM5ZjQ5ZmUsICNmZmZmZmYpO1xuICAvLyBjb2xvcjogbGluZWFyLWdyYWRpZW50KCNmZmZmZmYsICM3OTAyZmQpO1xufVxuXG4ubGVlZC5nb2xkIHtcbiAgLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoI2ZmZjMwZCwgI2ZmZmZmZik7XG4gIC8vIGNvbG9yOiBsaW5lYXItZ3JhZGllbnQoI2ZmZmZmZiwgI2ZmZjMwZCk7XG59XG5cbi5sZWVkLnNpbHZlciB7XG4gIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNjMWMxYzEsICNmZmZmZmYpO1xufVxuXG5pb24taXRlbSB7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbn1cbiIsImlvbi1tZW51LWJ1dHRvbiB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbn1cblxuI2NvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG4jY29udGFpbmVyIHAge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzhjOGM4YztcbiAgbWFyZ2luOiAwO1xufVxuXG4jY29udGFpbmVyIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmlvbi10b29sYmFyIHtcbiAgLS1iYWNrZ3JvdW5kOiAjZmZmZmZmO1xufVxuXG4ubGVlZCB7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbn1cblxuLmxlZWQucGxhdGludW0ge1xuICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjOWY0OWZlLCAjZmZmZmZmKTtcbn1cblxuLmxlZWQuZ29sZCB7XG4gIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNmZmYzMGQsICNmZmZmZmYpO1xufVxuXG4ubGVlZC5zaWx2ZXIge1xuICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjYzFjMWMxLCAjZmZmZmZmKTtcbn1cblxuaW9uLWl0ZW0ge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\nimport { EventService } from './../events/event.service';\nimport { AppDataService } from './../services/app-data.service';\n\n@Component({\n  selector: 'app-folder',\n  templateUrl: './folder.page.html',\n  styleUrls: ['./folder.page.scss'],\n})\nexport class FolderPage implements OnInit {\n  public id;\n  public building = {};\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private menu: MenuController,\n    private events: EventService,\n    private info: AppDataService\n  ) { }\n\n  ionViewDidEnter() {\n    this.menu.enable(true,'outsideMap');\n  }\n\n  async ngOnInit() {\n    var folder: string;\n    folder = this.activatedRoute.snapshot.paramMap.get('id');\n\n    this.events.publish('page', Number(folder));\n    this.id = Number(folder);\n    await this.info.getSpecificBuildingData(this.id).then((data) => {\n      if(data) {\n        this.building = data;\n      }\n    });\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}